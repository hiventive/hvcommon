# Block
file(GLOB_RECURSE SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)

add_library(${PROJECT_NAME_LOWER} ${SOURCE_FILES})
generate_export_header(${PROJECT_NAME_LOWER})
set_target_properties(${PROJECT_NAME_LOWER} PROPERTIES
		VERSION ${${PROJECT_NAME}_VERSION}
		EXPORT_NAME ${PROJECT_NAME_LOWER_WP})

target_link_libraries(${PROJECT_NAME_LOWER} SystemC::systemc SystemC::cci)
target_include_directories(${PROJECT_NAME_LOWER} PUBLIC
		"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
		"$<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>")

# Install
if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME_LOWER_WP}.h)
	install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME_LOWER_WP}.h
			DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${HV_LIB_PREFIX})
endif()
install(TARGETS ${PROJECT_NAME_LOWER}
		EXPORT ${PROJECT_NAME}Targets
		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/"
		DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${HV_LIB_PREFIX}/${PROJECT_NAME_LOWER_WP}
		FILES_MATCHING
		PATTERN "${PROJECT_NAME_LOWER_WP}.h" EXCLUDE
		PATTERN "*.h"
		PATTERN "*.hpp")

# CMake
set(${PROJECT_NAME}ConfigPackageLocation ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
set(${PROJECT_NAME}TargetsFile ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}Targets.cmake)
set(${PROJECT_NAME}ConfigFile ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}Config.cmake)
set(${PROJECT_NAME}ConfigVersionFile ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}/${PROJECT_NAME}ConfigVersion.cmake)
write_basic_package_version_file(${${PROJECT_NAME}ConfigVersionFile}
		VERSION ${${PROJECT_NAME}_VERSION}
		COMPATIBILITY AnyNewerVersion)
export(EXPORT ${PROJECT_NAME}Targets
		FILE ${${PROJECT_NAME}TargetsFile}
		NAMESPACE ${HV_NAMESPACE})
file(READ ${PROJECT_SOURCE_DIR}/cmake/Config.cmake.in ${PROJECT_NAME}_CONFIG_IN)
string(REPLACE "#PROJECT_NAME#" ${PROJECT_NAME} ${PROJECT_NAME}_CONFIG_IN "${${PROJECT_NAME}_CONFIG_IN}")
file(WRITE ${PROJECT_BINARY_DIR}/cmake/Config.cmake.in "${${PROJECT_NAME}_CONFIG_IN}")
configure_package_config_file(${PROJECT_BINARY_DIR}/cmake/Config.cmake.in ${${PROJECT_NAME}ConfigFile}
		INSTALL_DESTINATION ${${PROJECT_NAME}ConfigPackageLocation})
install(EXPORT ${PROJECT_NAME}Targets
		FILE ${PROJECT_NAME}Targets.cmake
		NAMESPACE ${HV_NAMESPACE}
		DESTINATION ${${PROJECT_NAME}ConfigPackageLocation})
install(FILES ${${PROJECT_NAME}ConfigFile} ${${PROJECT_NAME}ConfigVersionFile}
		DESTINATION ${${PROJECT_NAME}ConfigPackageLocation})
